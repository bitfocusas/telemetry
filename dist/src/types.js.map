{"version":3,"file":"types.js","sourceRoot":"","sources":["../../src/types.ts"],"names":[],"mappings":";;;AAEA,4CAA4C;AAC5C,IAAY,gBAGX;AAHD,WAAY,gBAAgB;IAC3B,+FAA4B,CAAA;IAC5B,iFAAqB,CAAA;AACtB,CAAC,EAHW,gBAAgB,gCAAhB,gBAAgB,QAG3B","sourcesContent":["export type ElgatoHardwareItem = [string, boolean]\n\n// Define the enum for your telemetry events\nexport enum TELEMETRY_EVENTS {\n\tELGATO_HARDWARE_PRESENCE = 1,\n\tBITFOCUS_SOFTWARE = 2,\n}\n\n// Create a mapping between event names and payload types\ntype TelemetryEventPayloadMap = {\n\t[TELEMETRY_EVENTS.ELGATO_HARDWARE_PRESENCE]: ElgatoHardwareItem[]\n\t[TELEMETRY_EVENTS.BITFOCUS_SOFTWARE]: 'buttons' | 'companion'\n}\n\n// Utility type to ensure correct payloads for each event\nexport type TelemetryEvent<T extends TELEMETRY_EVENTS> = [T, TelemetryEventPayloadMap[T]]\n\n// Combine all possible telemetry events into a single type\nexport type SomeTelemetryEvent =\n\t| TelemetryEvent<TELEMETRY_EVENTS.ELGATO_HARDWARE_PRESENCE>\n\t| TelemetryEvent<TELEMETRY_EVENTS.BITFOCUS_SOFTWARE>\n"]}